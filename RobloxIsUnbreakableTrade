-- This file was generated using Luraph Obfuscator v13.5.9

return(function(vl,Il,tl,Ml,Vl,rl,sl,Sl,Zl,il,Dl,bl,ml,Fl,el,Nl,Jl,Kl,Ul,yl,gl,Wl,Pl,Yl,nl,Cl,Rl,ll,zl,Bl,pl,Hl,Gl,Ll,kl,ql,w,...)local X,Y,O=select,nil,(nil);do for j_=0X0000,1 do if j_~=0X0 then do O=Gl.char;end;else Y=Zl;end;end;end;local Al=(0);local E,d,U,u=nil,nil,nil,(nil);local T,c=assert,type;repeat do if not(Al<=0X00001)then do if Al==2 then d=sl;Al=0x1;else u=ql;Al=4;end;end;else if Al~=0 then do U=0X1;end;Al=0x3;else E=vl;Al=2;end;end;end;until Al==0X4;local r=(rawset);local m=unpack or pl;local h=tonumber;local G=(rl);Al=0X0;local Ql,s=nil,nil;repeat if Al~=0x0000 then s=Pl;Al=0X00002;else do Ql=function(...)return X('\035',...),{...};end;end;Al=0X00001;end;until Al==0X0002;local p=rawget;local P=Yl;Al=0X1;local l,Z=nil,nil;repeat if not(Al<=0X000)then do if Al~=0X1 then do Z=ml;end;Al=0;else l=ll;Al=0X2;end;end;else break;end;until false;local D=(getfenv);local g=(D and D()or _ENV);do Al=2;end;local I,W,z=nil,nil,(nil);do while Al~=0X00004 do if Al<=0X1 then if Al==0 then z=function()local tg=nil;local Bg=1;while(true)do if Bg<=0 then U=U+0X1;Bg=2;else if Bg==0x1 then tg=d(I,U,U);Bg=0X00;else return tg;end;end;end;end;Al=0X4;else do Al=0X3;end;end;elseif Al==0X2 then I="LPH]";Al=1;else I=G(u(I,tl),'.\046',function(Q9)if d(Q9,0x0002)==72 then W=h(u(Q9,Dl,1));return"";else local zN=(0x001);local sN=(nil);while(true)do if zN==0X0 then if not(W)then do return sN;end;else local FA,vA=0X00,nil;while FA~=0x002 do if FA~=0 then W=nl;FA=0X2;else do vA=Z(sN,W);end;FA=1;end;end;return vA;end;break;else sN=O(h(Q9,0X0010));zN=0;end;end;end;end);do Al=0X00000;end;end;end;end;Al=0X00006;local cl,y,R,e,L,N,k,F,J=nil,nil,nil,nil,nil,nil,nil,nil,(nil);repeat if Al<=3 then if Al<=1 then if Al~=0 then do R=0X0080000000;end;Al=5;else do J={[0X00]=0X1};end;break;end;else if Al~=0X2 then y=0X0100000000;Al=0x1;else F=y-0X001;do Al=0;end;end;end;elseif not(Al<=5)then if Al<=6 then do cl={};end;Al=0X003;else if Al==7 then k=function()local O7,A7,E7,Y7=nil,nil,nil,nil;do for V1=0,0x2 do do if not(V1<=0X0)then if V1==1 then do U=U+4;end;else return Y7*0X1000000+E7*0X10000+A7*256+O7;end;else O7,A7,E7,Y7=d(I,U,U+3);end;end;end;end;end;do Al=0X02;end;else L=2^0X0034;Al=0X4;end;end;else if Al~=4 then e=R-0X1;do Al=8;end;else N={[gl]={[0X0]=0X0,0X1,2,0X3,Ul,5,0X6,7,8,9,0XA,11,12,0Xd,0X0e,15},{[0]=1,0,0X3,0X0002,0X5,4,Il,0x6,9,0X8,11,Wl,0xD,0Xc,15,0XE},{[0]=2,3,0X0,1,6,7,4,5,10,11,8,9,14,0xF,12,13},{[0]=0X003,0X02,0x1,0x0,7,0X6,0X00005,4,11,0XA,0X9,0x8,zl,kl,13,0X0C},{[0X0]=0X0004,5,0x6,7,0x0000,Dl,0X2,0X003,12,13,14,0XF,8,9,0XA,0Xb},{[0x0]=5,Ul,0x7,6,0X1,0,0X03,0X0002,13,0Xc,0X000f,kl,0X9,8,0X00b,0XA},{[0]=0x06,7,4,5,2,3,0X000,1,14,15,12,13,0X0a,0Xb,0X8,0X9},{[0X0]=7,6,5,0X4,3,2,0X00001,0X0,15,14,0X0D,0X000C,0Xb,10,9,0X8},{[0X0]=Rl,9,10,0Xb,0XC,13,0Xe,15,0X00,0X1,2,0X3,4,5,0x6,7},{[gl]=0x9,Rl,yl,0X000a,13,0X00c,15,14,0x1,0,3,2,0X5,4,7,6},{[0X0]=10,0XB,8,Ll,0xe,15,12,13,0X02,0X3,0X000,1,0X6,7,4,0X5},{[0]=11,10,0X9,0X8,15,14,0Xd,12,3,2,0X1,0X0,7,Fl,0X5,4},{[gl]=12,0X00d,14,0xF,8,9,0XA,0X0000b,0X4,0X005,0X6,Il,0,Dl,el,0X003},{[0x000]=13,Jl,15,0Xe,0X09,Rl,0X00B,0Xa,0X05,0X4,0X007,0X0006,1,0,0X03,0X2},{[0X0]=14,15,12,13,Wl,11,8,Ll,0X6,7,4,0x5,0X02,3,0,0x001},{[gl]=15,14,13,12,0xB,Wl,0X0009,0x008,0X007,0X00006,0x5,4,0X3,0X0002,0X1,0}};Al=0x00007;end;end;until false;Al=0X1;local V=nil;while 0.6314617109427599 do if Al~=0X00 then do local xW=2;for MF=0X00001,31 do local TF=0X1;do repeat do if TF~=0 then J[MF]=xW;TF=0X0;else xW=xW*0X2;do break;end;end;end;until false;end;end;end;Al=0;else V=function(XK,GK,JK)local PK=((XK/J[GK])%J[JK]);PK=PK-PK%1;return PK;end;break;end;end;local o=tostring;Al=0;local H,v,M,i=nil,nil,nil,nil;repeat if Al<=0X1 then if Al~=0x0 then i=(Hl or bit32);break;else H=function()local sB=0;local rB,VB=nil,nil;while(true)do if not(sB<=0X0)then do if sB~=0X1 then do return VB*y+rB;end;else do if VB>=R then VB=VB-y;end;end;do sB=0X002;end;end;end;else rB,VB=k(),k();sB=0x00001;end;end;end;Al=0x002;end;else if Al==0X00002 then v=string.match;Al=0X0003;else M=function()local W6=0X2;local fl,jl=nil,(nil);while(true)do do if not(W6<=0X00000)then do if W6==0X0001 then do if not(fl==0X0 and jl==gl)then else return 0;end;end;break;else fl=k();W6=0x0;end;end;else jl=k();W6=1;end;end;end;local xl=((-0X1)^V(jl,0X1f,1));local al=V(jl,0X00014,11);local O6=(1);local Q6=(V(jl,0X0000,0X0014)*y+fl);if al==0 then if Q6==0 then do return xl*0X0;end;else local qF=0;do while qF~=2 do if qF==0X0 then do al=0X01;end;qF=1;else O6=0X0;do qF=2;end;end;end;end;end;elseif al==2047 then if Q6~=gl then return xl*(0X1/0);else return xl*(0/0);end;end;return xl*(0X2^(al-Vl))*(Q6/L+O6);end;Al=0X01;end;end;until(false);local S=(i and i.bxor or function(nX,BX)nX=nX%y;local SX=(nil);local lX=(0x1);local yX=(0x2);do repeat do if yX<=0x00001 then if yX~=0x00000 then return SX+nX*lX+BX*lX;else SX=0x000;yX=3;end;else if yX==2 then do BX=BX%y;end;yX=0X0;else while nX>gl and BX>gl do local q4,D4,U4=0,nil,(nil);repeat do if q4~=0 then U4=BX%0X10;do break;end;else D4=nX%16;q4=1;end;end;until(false);q4=0;while q4~=0X2 do if q4~=0 then do nX=(nX-D4)/0x10;end;q4=2;else SX=SX+N[D4][U4]*lX;q4=1;end;end;BX=(BX-U4)/16;lX=lX*16;end;yX=1;end;end;end;until false;end;end);local B=(i and i[Ml]or function(WY,NY)local SY=1;repeat if SY<=0X0 then return((WY+NY)-S(WY,NY))/0X2;elseif SY==0x1 then WY=WY%y;do SY=0X2;end;else do NY=NY%y;end;SY=0;end;until false;end);local b=(i and i.bor or function(MD,XD)MD=MD%y;do XD=XD%y;end;return F-B(F-MD,F-XD);end);local C=i and i[Nl];local A=(i and i.rshift);local K=(i and i.bnot or function(pj)return F-(pj%y);end);Al=2;local f,a=nil,nil;while Al~=4 do do if Al<=1 then if Al==0 then A=A or function(jl,fl)local xl,al=3,(nil);while-807839102 do if xl<=1 then if xl==0X0000 then do if not(fl<0)then else return C(jl,-fl);end;end;xl=2;else return al-al%0x00001;end;else if xl~=2 then if not(fl>=0x000020)then else do return 0X00;end;end;xl=0;else do al=(jl%y/J[fl]);end;xl=0x0001;end;end;end;end;Al=3;else do a={[5]=0X003,[2]=0X5,[1]=5,[4]=0X006,[0X007]=0X00000,[4]=Ul,[0x3]=0X00004,[6]=2};end;Al=4;end;else do if Al==2 then C=C or function(MP,iP)local dP=(0X1);repeat if not(dP<=0x0)then if dP~=0X1 then if iP<0x000 then return A(MP,-iP);end;do dP=0X0;end;else if iP>=il then return 0;end;dP=0x2;end;else return(MP*J[iP])%y;end;until(false);end;Al=0x0;else f=function()local iR=0;local kR=(0);do repeat local As=(d(I,U,U));U=U+0x1;do kR=b(kR,C(B(As,0x0007F),iR));end;do if B(As,0X080)==0X0 then return kR;end;end;do iR=iR+0x7;end;until false;end;end;Al=1;end;end;end;end;end;do Al=0X1;end;local x,q=nil,(nil);while Al~=0X2 do do if Al==0X0 then q=Sl;Al=2;else x=function()local i4=(f());local S4=(0X1);repeat if S4~=0 then if not(i4>e)then else return i4-y;end;S4=0;else return i4;end;until false;end;Al=0;end;end;end;local wl=z();local t=setfenv;local Tl=(z());local Xl,hl,ol=nil,nil,nil;do for xl=0x00,0X2 do if not(xl<=0)then do if xl==0x01 then hl=function(I0)local c0=k();local o0=(nil);local V0=(0X0);repeat do if V0==0 then o0="";V0=1;else for Rx=1,c0,0x001f3d do local ox,Hx,Wx=1,nil,nil;do repeat if ox<=0x0 then do if Hx>c0 then Hx=c0;end;end;ox=2;else do if ox~=1 then Wx={d(I,U+Rx-Dl,U+Hx-1)};ox=0X3;else Hx=Rx+0X1F3d-1;do ox=0;end;end;end;end;until ox==0X3;end;ox=0x001;while"qu}"do if ox~=0x0 then do for n_=1,#Wx do local G_=0X0;repeat if G_==0X0000 then do(Wx)[n_]=S(Wx[n_],wl);end;do G_=0x1;end;else wl=(I0*wl+Bl)%256;G_=2;end;until G_==2;end;end;do ox=0X000;end;else o0=o0..O(m(Wx));break;end;end;end;break;end;end;until false;U=U+c0;return o0;end;else ol=1;end;end;else Xl=function(VZ)local vZ=0x03;local KZ,MZ,IZ,tZ=nil,nil,nil,(nil);do while vZ~=0X4 do do if not(vZ<=0x001)then if vZ~=0X2 then KZ={d(I,U,U+3)};vZ=2;else do MZ=S(KZ[0X001],Tl);end;vZ=0X00001;end;else if vZ~=0x0000 then IZ=S(KZ[2],Tl);vZ=0X0000;else do tZ=S(KZ[3],Tl);end;do vZ=0X4;end;end;end;end;end;end;local jZ=(S(KZ[4],Tl));do vZ=0X2;end;while true do if vZ<=0x00000 then U=U+0X00004;vZ=0X001;else do if vZ==1 then do return jZ*16777216+tZ*65536+IZ*0x100+MZ;end;else do Tl=(0X0f5*Tl+VZ)%0X000100;end;vZ=0;end;end;end;end;end;end;end;end;local Q,j,El,ul,dl=pcall,nil,nil,nil,(nil);for sn=0,0X04 do if not(sn<=0X00001)then if not(sn<=2)then do if sn~=0x3 then function dl()local qQ,nQ,eQ,uQ,zQ,yQ,vQ=0X007,nil,nil,nil,nil,nil,nil;repeat if not(qQ<=0x0004)then if qQ<=0x7 then if not(qQ<=0X5)then if qQ==6 then eQ[0x0000d]=z();qQ=0XA;else nQ={};qQ=0x2;end;else(eQ)[4]=f();qQ=0X9;end;else if not(qQ<=0x8)then do if qQ==9 then yQ=k()-0XDDdf;do qQ=4;end;else uQ=k()-73878;qQ=0;end;end;else do for vT=0,uQ-0x1 do(zQ)[vT]=dl();end;end;qQ=5;end;end;elseif qQ<=1 then if qQ~=0X00000 then eQ[1]=f();do qQ=6;end;else do zQ=eQ[0X8];end;qQ=8;end;else do if qQ<=2 then eQ={nil,{},nil,nil,nl,nil,nl,{},{}};do qQ=3;end;else do if qQ~=3 then vQ=eQ[0X00009];do qQ=11;end;else(eQ)[7]=f();qQ=1;end;end;end;end;end;until qQ==0X0b;for WX=1,yQ do(vQ)[WX]={[7]=f(),[2]=z(),[0X00004]=z(),[0X1]=x(),[0x00003]=x(),[0X5]=z(),[6]=x()};end;local QQ=nil;for XI=0,1 do do if XI==0x0 then QQ={};else eQ[0X013]=k();end;end;end;local WQ,HQ=nil,nil;for V5=0,1 do if V5~=0 then do HQ=z();end;else WQ=k()-0X0000B250;end;end;qQ=0;local DQ,YQ=nil,nil;repeat do if qQ<=1 then if qQ~=0 then YQ=z()~=0;qQ=3;else DQ=1;do qQ=1;end;end;elseif qQ~=0X0002 then for Bn=Dl,WQ do local jn,sn,In,dn=0X00002,nil,nil,nil;repeat if not(jn<=0x00002)then if jn<=0x4 then if jn==0X3 then DQ=DQ+Dl;jn=7;else QQ[DQ]=dn;do jn=3;end;end;else if jn==5 then if sn==123 then In=u(hl(HQ),k());elseif sn==0X35 then In=bl;elseif sn==161 then In=u(hl(HQ),M()+k());elseif sn==16 then In=false;elseif sn==0X00002F then do In=M();end;elseif sn==0X6C then In=H();elseif sn==78 then In=M()+k();elseif sn==57 then In=H();elseif sn==194 then do In=u(hl(HQ),0X004);end;end;jn=0X1;else do In=nil;end;jn=0X000;end;end;else if not(jn<=0)then if jn==0X1 then dn={In,{}};jn=4;else sn=z();jn=0X6;end;else nQ[Bn-0X1]=DQ;jn=5;end;end;until jn==0x7;if YQ then do cl[ol]=dn;end;do ol=ol+0X1;end;end;end;qQ=2;else do for RX=0X01,yQ do local sX=(0);local vX=nil;do while sX<=0X0001 do if sX==0x000 then vX=eQ[0X00009][RX];sX=1;else for Th,qh in Kl(j)do local ph,mh=nil,(nil);for bF=0,0X2 do if bF<=0 then ph=a[qh];else if bF~=0X001 then if mh==2 then local t9=(nQ[vX[qh]]);local R9=nil;for xM=0,1 do if xM~=0 then if not(R9)then else local Aq=(nil);do for NC=0x00000,2 do do if not(NC<=0)then if NC==0x01 then do Aq=R9[2];end;else do(Aq)[#Aq+0X1]={vX,ph};end;end;else do vX[ph]=R9[0X1];end;end;end;end;end;end;else do R9=QQ[t9];end;end;end;elseif mh==Ll then vX[qh]=RX+vX[qh]+0x00001;end;else mh=vX[ph];end;end;end;end;sX=2;end;end;end;end;end;break;end;end;until(false);qQ=0;local sQ=nil;do repeat do if not(qQ<=2)then do if qQ<=3 then(eQ)[0X00E]=z();do qQ=6;end;else if qQ~=4 then eQ[0X5]=V(sQ,0X2,1)~=0;qQ=4;else do eQ[0xD]=k();end;qQ=3;end;end;end;else do if qQ<=0X0 then eQ[0X0c]=z();qQ=0X002;elseif qQ~=1 then do sQ=z();end;qQ=1;else do(eQ)[Cl]=V(sQ,1,0X1)~=0;end;qQ=5;end;end;end;end;until qQ>0X05;end;qQ=0X003;local xQ=nil;repeat if qQ<=0X1 then do if qQ==0 then return eQ;else for E6=1,f()do xQ[E6]={z(),f()};end;do qQ=0;end;end;end;else if qQ~=0X02 then xQ={};qQ=2;else do(eQ)[0X006]=xQ;end;qQ=1;end;end;until false;end;else function ul(nK,tK,FK)local BK,XK=nK[3],nK[0X5];local NK,PK,oK,vK,ZK=nK[0X00009],nK[0X8],nK[1],nK[4],nK[2];local AK=(q({},{__mode='\118'}));local eK=(nK[7]);local QK=nil;QK=function(...)local xv=({});local Mv=1;local Bv=(D and D()or _ENV);local vv=((Bv==g and tK or Bv));local Qv=({[2]=nK,[0X1]=xv});local Zv,dv=Ql(...);local Xv=(0X0);do Zv=Zv-0X1;end;for ks=0,Zv do do if not(oK>ks)then break;else do(xv)[ks]=dv[ks+1];end;end;end;end;if not BK then do dv=nil;end;else if not(XK)then else(xv)[oK]={n=Zv>=oK and Zv-oK+1 or 0,m(dv,oK+1,Zv+1)};end;end;if vv==Bv then else if not(t)then _ENV=vv;else(t)(QK,vv);end;end;repeat local sp=NK[Mv];local Rp=sp[7];Mv=Mv+1;if not(Rp<0X02f)then do if Rp>=0X00046 then if not(Rp>=0X52)then do if not(Rp<0X00004c)then if Rp<0X4F then if not(Rp>=0X004D)then local jd=(sp[0X6]);do Xv=jd+sp[0X01]-1;end;xv[jd](m(xv,jd+1,Xv));Xv=jd-1;else if Rp~=0X4e then local yD=(sp[6]);local sD=(sp[3]-0X1)*50;local iD=(xv[yD]);do for mZ=1,sp[0x1]do do(iD)[sD+mZ]=xv[yD+mZ];end;end;end;else local aq=(PK[sp[1]]);local Iq,Nq=aq[6],nil;local Rq=(#Iq);if not(Rq>0X00000)then else Nq={};for Gy=1,Rq do local My=Iq[Gy];if My[1]~=0 then do(Nq)[Gy-0X1]=FK[My[2]];end;else Nq[Gy-1]={xv,My[0X2]};end;end;s(AK,Nq);end;xv[sp[0X6]]=ul(aq,vv,Nq);end;end;else do if Rp>=0X050 then do if Rp~=0X0051 then do xv[sp[6]]=nil;end;else xv[sp[0X006]]={};end;end;else repeat local az,sz=AK,(xv);if not(#az>0X0)then else local Bg={};for GC,aC in P,az do for rL,gL in P,aC do if gL[1]==sz and gL[0X2]>=0X0 then local RO=(gL[2]);do if not(not Bg[RO])then else(Bg)[RO]={sz[RO]};end;end;do gL[0X1]=Bg[RO];end;gL[2]=0X1;end;end;end;end;until true;return xv[sp[6]]();end;end;end;else do if Rp>=73 then if Rp>=74 then do if Rp~=0x04B then local XE=(sp[6]);local jE,WE=xv[XE]();if jE then xv[XE+0X0001]=WE;Mv=sp[1];end;else repeat local KJ,kJ=AK,xv;do if#KJ>0 then local li={};for G5,u5 in P,KJ do do for WT,rT in P,u5 do if rT[1]==kJ and rT[0x2]>=0X0 then local qI=rT[0X2];do if not(not li[qI])then else li[qI]={kJ[qI]};end;end;(rT)[1]=li[qI];(rT)[0X00002]=0X1;end;end;end;end;end;end;until true;return xv[sp[6]];end;end;else local Bk=(xv[sp[0X001]]);local pk=sp[0X06];xv[pk+1]=Bk;do xv[pk]=Bk[sp[4]];end;end;else do if Rp<0x000047 then(xv)[sp[0X0006]]=sp[0X0005];else if Rp==72 then repeat local tu,mu=AK,(xv);if not(#tu>0X000)then else local bu=({});for L0,S0 in P,tu do for Yy,Fy in P,S0 do if not(Fy[0X1]==mu and Fy[2]>=0)then else local dy=(Fy[0x2]);do if not(not bu[dy])then else(bu)[dy]={mu[dy]};end;end;do Fy[0X01]=bu[dy];end;do Fy[2]=1;end;end;end;end;end;until true;local eJ=(sp[0X6]);return xv[eJ](m(xv,eJ+0x0001,Xv));else for fR=sp[0X6],sp[0X00001]do(xv)[fR]=nil;end;end;end;end;end;end;end;end;else if not(Rp<88)then if not(Rp<91)then if Rp>=0X5c then if Rp==93 then local tA=sp[0X6];local GA,FA,QA=xv[tA]();do if not(GA)then else do xv[tA+1]=FA;end;xv[tA+0X2]=QA;Mv=sp[0X001];end;end;else xv[sp[0X00006]][sp[0x5]]=xv[sp[0X003]];end;else Qv[sp[0X1]]=xv[sp[6]];end;else if Rp>=89 then if Rp~=0x5a then local Cx=(sp[0X6]);local gx,zx=xv[Cx]();do if gx then Mv=sp[1];xv[Cx+3]=zx;end;end;else do Xv=sp[6];end;do(xv)[Xv]=xv[Xv]();end;end;else if not(xv[sp[1]]<=xv[sp[0x3]])then Mv=sp[0X6];end;end;end;else do if Rp<0X55 then if Rp<0X00053 then do El[sp[0x00001]]=xv[sp[0X6]];end;else if Rp==0X000054 then do if not(not(xv[sp[0X0001]]<xv[sp[0X3]]))then else do Mv=sp[6];end;end;end;else local v0=sp[0X6];local S0,j0=xv[v0]();if S0 then do for eE=1,sp[0X3]do do(xv)[v0+eE]=j0[eE];end;end;end;Mv=sp[0X01];end;end;end;else do if not(Rp>=86)then xv[sp[6]]={m({},0X0001,sp[1])};else if Rp~=0x57 then do xv[sp[6]]=B(xv[sp[1]],xv[sp[0X3]]);end;else local Yv=sp[1];xv[sp[0X6]]=xv[Yv]..xv[Yv+1];end;end;end;end;end;end;end;else if Rp>=58 then if not(Rp>=0x40)then if Rp>=0X3d then if not(Rp<62)then if Rp~=63 then if xv[sp[0X1]]==sp[0x4]then Mv=sp[6];end;else xv[sp[0X00006]]=xv[sp[0x1]]~=xv[sp[3]];end;else xv[sp[6]]=xv[sp[1]]<=xv[sp[0X0003]];end;else if Rp<0X3B then local BL=sp[6];local LL=sp[1];if LL==0 then else Xv=BL+LL-1;end;local jL,GL,YL=nil,nil,(sp[0x03]);if LL~=0X0001 then jL,GL=Ql(xv[BL](m(xv,BL+0x01,Xv)));else jL,GL=Ql(xv[BL]());end;do if YL~=0X1 then if YL==0 then jL=jL+BL-0X1;Xv=jL;else do jL=BL+YL-0X2;end;Xv=jL+0X0001;end;local gD=0X0;do for tO=BL,jL do gD=gD+1;xv[tO]=GL[gD];end;end;else Xv=BL-1;end;end;else if Rp~=60 then xv[sp[6]]=xv[sp[0X1]][sp[4]];else do(xv)[sp[0X6]]=vv[sp[0X005]];end;end;end;end;else if Rp<0X043 then if not(Rp<0X41)then if Rp~=66 then local N6=(sp[1]);local Y6=xv[N6];do for aT=N6+1,sp[0X3]do do Y6=Y6..xv[aT];end;end;end;(xv)[sp[6]]=Y6;else if xv[sp[0X1]]<=xv[sp[0X03]]then Mv=sp[6];end;end;else xv[sp[0X6]]=not xv[sp[1]];end;else do if not(Rp>=68)then Xv=sp[0X06];(xv[Xv])();Xv=Xv-1;else do if Rp~=69 then local eX=FK[sp[0X1]];(eX[1])[eX[0X00002]]=xv[sp[0X6]];else do if sp[0X3]==0x2F then do Mv=Mv-1;end;NK[Mv]={[0X1]=(sp[0X001]-0X00018),[0X00007]=0X035,[0X6]=(sp[6]-24)};else do(xv)[sp[6]]=-xv[sp[0X1]];end;end;end;end;end;end;end;end;end;else do if not(Rp<52)then if not(Rp<55)then do if not(Rp>=0x0038)then xv[sp[0x6]][xv[sp[1]]]=xv[sp[0x3]];else if Rp==57 then do if sp[0X00003]==186 then Mv=Mv-0x00001;do(NK)[Mv]={[7]=46,[0x6]=(sp[0X6]-241),[1]=(sp[1]-241)};end;elseif sp[0X3]~=233 then if xv[sp[6]]then Mv=sp[1];end;else do Mv=Mv-1;end;NK[Mv]={[0x7]=0x50,[1]=(sp[0X1]-1),[6]=(sp[0X6]-0X1)};end;end;else do if xv[sp[0X1]]==xv[sp[3]]then do Mv=sp[0X006];end;end;end;end;end;end;else if not(Rp>=53)then repeat local qw,Gw=AK,xv;do if#qw>0x0 then local E2=({});for Xx,Tx in P,qw do for lv,Nv in P,Tx do if not(Nv[0x1]==Gw and Nv[2]>=0x00)then else local rN=(Nv[2]);if not(not E2[rN])then else E2[rN]={Gw[rN]};end;Nv[1]=E2[rN];(Nv)[0X2]=1;end;end;end;end;end;until true;return m(xv,sp[0X6],Xv);else if Rp==54 then xv[sp[6]]=true;else repeat local RW,gW=AK,(xv);do if not(#RW>0)then else local tf=({});for z5,C5 in P,RW do for ii,ui in P,C5 do if not(ui[0X1]==gW and ui[0X2]>=0x00000)then else local cN=ui[2];if not(not tf[cN])then else tf[cN]={gW[cN]};end;(ui)[0X0001]=tf[cN];ui[0X2]=1;end;end;end;end;end;until true;return;end;end;end;else do if not(Rp>=49)then if Rp~=0x30 then(xv)[sp[6]]=xv[sp[1]][xv[sp[0X00003]]];else(vv)[sp[5]]=xv[sp[0X00006]];end;else if Rp<0X32 then(xv)[sp[0X6]]=xv[sp[0X1]]-xv[sp[3]];else do if Rp~=0X33 then xv[sp[0X6]]=A(xv[sp[0X0001]],xv[sp[3]]);else repeat local W_,A_,D_=AK,xv,(sp[0X6]);if not(#W_>0)then else local EK=({});for jB,LB in P,W_ do for yu,ru in P,LB do if ru[0X01]==A_ and ru[2]>=D_ then local nL=(ru[0X2]);if not(not EK[nL])then else EK[nL]={A_[nL]};end;(ru)[1]=EK[nL];(ru)[2]=1;end;end;end;end;until true;end;end;end;end;end;end;end;end;end;end;elseif not(Rp<0X017)then do if not(Rp<0X23)then if Rp<41 then if not(Rp<0X26)then if Rp>=0x27 then do if Rp==0x28 then local wZ=(xv[sp[0X01]]/xv[sp[3]]);xv[sp[0X6]]=wZ-wZ%0x1;else local mv=sp[0x6];local Gv,pv=xv[mv+0X01],xv[mv+2];local Vv=xv[mv];(xv)[mv]=Y(function()do for u7=Vv,Gv,pv do(l)(true,u7);end;end;end);Mv=sp[1];end;end;else xv[sp[0X6]]=xv[sp[1]]/xv[sp[0x3]];end;else if not(Rp>=0x24)then(xv)[sp[0x6]]=xv[sp[0X00001]];else do if Rp~=0X25 then local Pm=(sp[0x0006]);(xv[Pm])(xv[Pm+0x00001],xv[Pm+2]);Xv=Pm-1;else do xv[sp[6]]=sp[0X5];end;end;end;end;end;else if not(Rp>=44)then if Rp>=42 then if Rp==0x002B then local Md=sp[6];do Xv=Md+sp[0x1]-0X001;end;xv[Md]=xv[Md](m(xv,Md+0X0001,Xv));Xv=Md;else local DL=sp[0X06];local VL=Y(function(...)(l)();for MW in...do(l)(true,MW);end;end);VL(xv[DL],xv[DL+1],xv[DL+0x0002]);do Xv=DL;end;(xv)[DL]=VL;do Mv=sp[1];end;end;else(xv)[sp[0X6]]=El[sp[1]];end;else if not(Rp<45)then if Rp==46 then if sp[0X3]==199 then Mv=Mv-1;do NK[Mv]={[0X0001]=(sp[0x1]-211),[7]=0X2C,[0X006]=(sp[0X6]-211)};end;else local Y5,J5=sp[6],(Zv-oK);if J5<0X0 then J5=-1;end;for dh=Y5,Y5+J5 do do xv[dh]=dv[oK+(dh-Y5)+1];end;end;Xv=Y5+J5;end;else if xv[sp[1]]<xv[sp[3]]then do Mv=sp[0X006];end;end;end;else if sp[3]==0X6E then Mv=Mv-0x01;(NK)[Mv]={[1]=(sp[0X001]-0X11),[6]=(sp[6]-0X11),[0X00007]=80};else(xv)[sp[6]]=#xv[sp[1]];end;end;end;end;else do if Rp<29 then if not(Rp<0X1a)then if Rp<0X1B then local uP=(FK[sp[1]]);xv[sp[0X6]]=uP[1][uP[0X2]];else do if Rp~=28 then do(xv)[sp[0x006]]=xv[sp[0X1]]>=xv[sp[3]];end;else local tF=(sp[0X6]);local rF=sp[1];Xv=tF+rF-1;repeat local ya,Wa=AK,xv;do if#ya>0x0 then local IP={};do for OD,qD in P,ya do for Hq,sq in P,qD do if not(sq[1]==Wa and sq[2]>=0X0)then else local wV=(sq[2]);do if not(not IP[wV])then else(IP)[wV]={Wa[wV]};end;end;sq[0X01]=IP[wV];(sq)[0X2]=1;end;end;end;end;end;end;until true;do return xv[tF](m(xv,tF+1,Xv));end;end;end;end;else if not(Rp<24)then do if Rp==25 then local cv=sp[0X6];(xv[cv])(m(xv,cv+1,Xv));Xv=cv-0X1;else if xv[sp[1]]~=sp[0X4]then Mv=sp[6];end;end;end;else xv[sp[0X06]]=xv[sp[1]]*xv[sp[0X3]];end;end;else if not(Rp>=32)then if Rp<0X1E then xv[sp[6]]=Qv[sp[0X001]];else if Rp==31 then local SC=sp[0X6];xv[SC]=xv[SC](xv[SC+0x1]);Xv=SC;else Mv=sp[1];end;end;else if not(Rp<33)then if Rp==0x22 then local ug=(sp[0x6]);do for u8=ug,ug+(sp[0X1]-0X1)do do xv[u8]=dv[oK+(u8-ug)+0X1];end;end;end;else local ni=sp[6];do xv[ni]=xv[ni](xv[ni+0x1],xv[ni+2]);end;Xv=ni;end;else local zW=sp[6];local MW=Y(function(...)l();for R1,E1,w1,q1,b1,M1,t1,I1,g1,e1 in...do(l)(true,{R1,E1,w1,q1,b1,M1,t1,I1,g1,e1});end;end);(MW)(xv[zW],xv[zW+1],xv[zW+0X2]);Xv=zW;xv[zW]=MW;Mv=sp[0X1];end;end;end;end;end;end;else if Rp<0Xb then if Rp<5 then if Rp>=0X2 then if not(Rp>=0X3)then(xv)[sp[6]]=xv[sp[0x0001]]==xv[sp[0X0003]];else if Rp==0x4 then do xv[sp[0X6]]=S(xv[sp[0X1]],xv[sp[3]]);end;else(xv)[sp[6]]=xv[sp[1]]+xv[sp[0X00003]];end;end;else if Rp~=1 then(xv[sp[6]])[xv[sp[1]]]=sp[0X4];else xv[sp[0X6]]=xv[sp[0X001]]>xv[sp[3]];end;end;else if Rp<0X8 then if Rp<6 then do xv[sp[0X6]]=xv[sp[1]]^xv[sp[0X3]];end;else do if Rp==7 then(xv)[sp[6]]=b(xv[sp[1]],xv[sp[3]]);else xv[sp[0X6]]=xv[sp[0X00001]]~=sp[0X4];end;end;end;else if not(Rp<9)then if Rp==0x0000a then repeat local Ji,Ki=AK,xv;do if#Ji>0 then local OF=({});do for sZ,PZ in P,Ji do for VV,OV in P,PZ do if not(OV[1]==Ki and OV[2]>=0)then else local Pr=(OV[2]);if not(not OF[Pr])then else do OF[Pr]={Ki[Pr]};end;end;OV[0X1]=OF[Pr];OV[2]=0X001;end;end;end;end;end;end;until true;local B8=sp[6];return m(xv,B8,B8+sp[0X1]-0X2);else xv[sp[0X6]]=xv[sp[1]]%xv[sp[0x3]];end;else xv[sp[0X00006]]=xv[sp[1]]%sp[0X4];end;end;end;else do if not(Rp<17)then if Rp<0X14 then if not(Rp>=18)then(xv)[sp[6]]=C(xv[sp[1]],xv[sp[3]]);else if Rp~=19 then xv[sp[6]]=K(xv[sp[0X1]]);else local zi=sp[6];xv[zi](xv[zi+0x0001]);Xv=zi-1;end;end;else if not(Rp<0X15)then if Rp~=0X000016 then if sp[3]==0X000b6 then Mv=Mv-0X1;NK[Mv]={[1]=(sp[0X1]-0X000DE),[0x0006]=(sp[0x06]-0XDE),[7]=75};else do if not(not xv[sp[6]])then else Mv=sp[0x1];end;end;end;else if not(xv[sp[0X0001]]<=sp[4])then do Mv=sp[6];end;end;end;else(xv)[sp[0X6]]=false;end;end;else do if Rp>=0xE then if not(Rp<0x0F)then do if Rp~=16 then xv[sp[0x6]][sp[5]]=sp[0X4];else local uG=(sp[6]);xv[uG]=xv[uG](m(xv,uG+0x1,Xv));Xv=uG;end;end;else(xv)[sp[0x6]]=xv[sp[0X001]]<xv[sp[0X3]];end;else if not(Rp<12)then if Rp==0Xd then local ZY=(sp[0X6]);local tY=xv[ZY];local zY=((sp[0X03]-0X1)*0X032);for jj=0x00001,Xv-ZY do do(tY)[zY+jj]=xv[ZY+jj];end;end;else if xv[sp[1]]==xv[sp[3]]then else Mv=sp[6];end;end;else local aO=sp[6];local sO=Y(function(...)l();do for ig,wg in...do l(true,ig,wg);end;end;end);sO(xv[aO],xv[aO+1],xv[aO+0X2]);Xv=aO;do(xv)[aO]=sO;end;Mv=sp[1];end;end;end;end;end;end;end;until false;end;do if t then(t)(QK,tK);end;end;do return QK;end;end;end;end;else end;else if sn~=0 then El={};else j={6,0x00003,0X1};end;end;end;local Ol=(dl());Al=0X0001;repeat if Al~=0x0 then do El[0X00002]=cl;end;Al=0;else cl=nil;Al=2;end;until Al==0X2;do return ul(Ol,g,nl)(...);end;end)(error,0X7,5,"\098\097nd",1023,string.gsub,string.byte,setmetatable,coroutine.wrap,32,0X1,true,string.rep,6,0X2,"\108\115hi\102\116",12,ipairs,0X4,11,0,10,table.insert,next,nil,3,8,coroutine.yield,15,83,table.unpack,bit,string,9,0Xe,string.sub,{537,3672553947,0X93C66b07,0x9C5ECD11,1191639943,0X04bC003C4,0xC5A85357,391318665,0X0007d164806},...);
